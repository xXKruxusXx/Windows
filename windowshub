--Windows Hub!--
-- Instances:

local ScreenGui = Instance.new("ScreenGui")
local Frame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TextLabel = Instance.new("TextLabel")
local TextLabel_2 = Instance.new("TextLabel")

--Properties:

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Frame.Parent = ScreenGui
Frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Frame.Position = UDim2.new(0.134241238, 0, 0.10450162, 0)
Frame.Size = UDim2.new(0, 611, 0, 311)

UICorner.Parent = Frame

TextLabel.Parent = Frame
TextLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.BackgroundTransparency = 1.000
TextLabel.Position = UDim2.new(0.0376432091, 0, 0.0225080382, 0)
TextLabel.Size = UDim2.new(0, 112, 0, 27)
TextLabel.Font = Enum.Font.SourceSans
TextLabel.Text = "Windows Hub"
TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel.TextScaled = true
TextLabel.TextSize = 14.000
TextLabel.TextWrapped = true

TextLabel_2.Parent = Frame
TextLabel_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.BackgroundTransparency = 1.000
TextLabel_2.Position = UDim2.new(0.240589216, 0, 0.247588426, 0)
TextLabel_2.Size = UDim2.new(0, 316, 0, 105)
TextLabel_2.Font = Enum.Font.SourceSans
TextLabel_2.Text = "Windows Hub stopped working:/"
TextLabel_2.TextColor3 = Color3.fromRGB(255, 255, 255)
TextLabel_2.TextScaled = true
TextLabel_2.TextSize = 14.000
TextLabel_2.TextWrapped = true

-- Scripts:

local function IMTPAL_fake_script() -- Frame.Script 
	local script = Instance.new('Script', Frame)

	game.StarterGui:SetCore("SendNotification", {
		Title = "Windows Hub Stopped Working";
		Text = "2 Weeks";
		Duration = "300";
		Callback = print("e")
	})
end
coroutine.wrap(IMTPAL_fake_script)()
local function TXHDF_fake_script() -- Frame.LocalScript 
	local script = Instance.new('LocalScript', Frame)

	game.StarterGui:SetCore("SendNotification", {
		Title = "Hello World";
		Text = "Hello World";
		Duration = "300";
		Callback = print("e")
	})
	--print("Hello World")
	--LocalScript--
end
coroutine.wrap(TXHDF_fake_script)()
